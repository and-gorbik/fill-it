"""
class Map:
    def __init__(self, size=2):
        self._resize_map(size)
        self._curi, self._curj = 0, 0
        self._placed_items = []

    def __str__(self):
        return "\n".join(["".join(line) for line in self._data])

    def _resize_map(self, size):
        self.size = size
        self._data = [['.'] * size] * size

    def _check_points(self, item, di, dj):
        for i, j in item.points:
            if (i + di >= self.size) or (j + dj >= self.size):
                return False
            if self._data[i + di][j + dj] not in '.':
                return False
        return True

    def _add_item(self, item):
        for di in range(self._curi, self.size):
            for dj in range(self._curj, self.size):
                if self._check_points(item, di, dj):
                    item.posi, item.posj = di, dj
                    self._placed_items.append(item)
                    for i, j in item.points:
                        self._data[i + di][j + dj] = item.chr
                    return True
        return False

    def _remove_prev_item(self):
        item = self._placed_items.pop()
        for i, j in item.points:
            self._data[i + item.posi][j + item.posj] = '.'
        return item

    def _move_position(self):
        if j + 1 < self.size:
            self._curj += 1
            return True
        if i + 1 < self.size:
            self._curi += 1
            self._curj = 0
            return True
        return False

    def fill(self, figures):
        while len(figures):
            # print("Stack size: {} - CurI: {} - CurJ: {}".format(len(figures), self._curi, self._curj))
            if self._add_item(figures[0]):
                self._curi, self._curj = figures[0].posi, figures[0].posj
                figures.pop(0)
                print(self, "\n")
            # elif size == len(figures):
            #     self._resize_map(self.size + 1)
            #     self._curi, self._curj = 0, 0
            else:
                if len(self._placed_items) != 0: # если есть хотя бы один размещенный элемент
                    item = self._remove_prev_item()
                    self._curi, self._curj = item.posi, item.posj
                    item.posi, item.posj = 0, 0
                    figures.insert(0, item)
                else
"""